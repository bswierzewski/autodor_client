/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/Contractors": {
    get: operations["GetContractors"];
    post: operations["CreateContractor"];
  };
  "/api/Contractors/{id}": {
    delete: operations["DeleteContractor"];
  };
  "/api/Orders": {
    get: operations["GetOrders"];
  };
  "/api/settings/ifirmaSettings": {
    get: operations["GetIFirmaSettings"];
    post: operations["CreateIFirmaSetting"];
  };
  "/api/settings/ifirmaSettings/{id}": {
    get: operations["GetIFirmaSetting"];
    put: operations["UpdateIFirmaSetting"];
    delete: operations["DeleteIFirmaSetting"];
  };
  "/api/settings/mongodbSettings": {
    get: operations["GetMongoDBSettings"];
    post: operations["CreateMongoDBSetting"];
  };
  "/api/settings/mongodbSettings/{id}": {
    get: operations["GetMongoDBSetting"];
    put: operations["UpdateMongoDBSetting"];
    delete: operations["DeleteMongoDBSetting"];
  };
  "/api/settings/polcarSettings": {
    get: operations["GetPolcarSettings"];
    post: operations["CreatePolcarSetting"];
  };
  "/api/settings/polcarSettings/{id}": {
    get: operations["GetPolcarSetting"];
    put: operations["UpdatePolcarSetting"];
    delete: operations["DeletePolcarSetting"];
  };
  "/api/settings/userSettings": {
    get: operations["GetUserSettings"];
    post: operations["CreateUserSetting"];
  };
  "/api/settings/userSettings/{id}": {
    get: operations["GetUserSetting"];
    put: operations["UpdateUserSetting"];
    delete: operations["DeleteUserSetting"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Contractor: {
      id?: string | null;
      /** Format: date-time */
      createdAt?: string;
      name?: string | null;
      city?: string | null;
      street?: string | null;
      nip?: string | null;
      zipCode?: string | null;
      email?: string | null;
    };
    CreateContractorCommand: {
      name?: string | null;
      city?: string | null;
      nip?: string | null;
      zipCode?: string | null;
      street?: string | null;
      email?: string | null;
    };
    CreateIFirmaSettingCommand: {
      user: string;
      fakturaKey: string;
    };
    CreateMongoDBSettingCommand: {
      collectionName: string;
    };
    CreatePolcarSettingCommand: {
      login: string;
      password: string;
      distributorCode: string;
      /** Format: int32 */
      branchId: number;
      /** Format: int32 */
      languageId: number;
    };
    CreateUserSettingCommand: {
      auth0Id: string;
      /** Format: int32 */
      iFirmaSettingId: number;
      /** Format: int32 */
      polcarSettingId: number;
      /** Format: int32 */
      mongoDBSettingId: number;
    };
    IFirmaSettingDto: {
      /** Format: int32 */
      id?: number;
      email?: string | null;
      fakturaApiKey?: string | null;
    };
    MongoDBSettingDto: {
      /** Format: int32 */
      id?: number;
      collectionName?: string | null;
    };
    OrderDto: {
      isSelected?: boolean;
      /** Format: date-time */
      date?: string;
      id?: string | null;
      number?: string | null;
      person?: string | null;
      items?: components["schemas"]["OrderItem"][] | null;
      /** Format: int32 */
      itemsCount?: number;
      /** Format: double */
      totalPrice?: number;
    };
    OrderItem: {
      partNumber?: string | null;
      partName?: string | null;
      /** Format: int32 */
      quantity?: number;
      /** Format: double */
      totalPrice?: number;
    };
    PolcarSettingDto: {
      /** Format: int32 */
      id?: number;
      login?: string | null;
      password?: string | null;
      distributorCode?: string | null;
      /** Format: int32 */
      branchId?: number;
      /** Format: int32 */
      languageId?: number;
    };
    UpdateIFirmaSettingCommand: {
      /** Format: int32 */
      id: number;
      user: string;
      fakturaKey: string;
    };
    UpdateMongoDBSettingCommand: {
      /** Format: int32 */
      id: number;
      collectionName: string;
    };
    UpdatePolcarSettingCommand: {
      /** Format: int32 */
      id: number;
      login: string;
      password: string;
      distributorCode: string;
      /** Format: int32 */
      branchId: number;
      /** Format: int32 */
      languageId: number;
    };
    UpdateUserSettingCommand: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      iFirmaSettingId: number;
      /** Format: int32 */
      polcarSettingId: number;
      /** Format: int32 */
      mongoDBSettingId: number;
    };
    UserSettingDto: {
      /** Format: int32 */
      id?: number;
      auth0Id?: string | null;
      /** Format: int32 */
      iFirmaSettingId?: number;
      iFirmaEmail?: string | null;
      /** Format: int32 */
      mongoDBSettingId?: number;
      mongoDBCollection?: string | null;
      /** Format: int32 */
      polcarSettingId?: number;
      polcarDistributorCode?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  GetContractors: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Contractor"][];
        };
      };
    };
  };
  CreateContractor: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateContractorCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeleteContractor: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  GetOrders: {
    parameters: {
      query: {
        dateFrom: string;
        dateTo: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["OrderDto"][];
        };
      };
    };
  };
  GetIFirmaSettings: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["IFirmaSettingDto"][];
        };
      };
    };
  };
  CreateIFirmaSetting: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateIFirmaSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  GetIFirmaSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["IFirmaSettingDto"];
        };
      };
    };
  };
  UpdateIFirmaSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdateIFirmaSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeleteIFirmaSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  GetMongoDBSettings: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MongoDBSettingDto"][];
        };
      };
    };
  };
  CreateMongoDBSetting: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateMongoDBSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  GetMongoDBSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["MongoDBSettingDto"];
        };
      };
    };
  };
  UpdateMongoDBSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdateMongoDBSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeleteMongoDBSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  GetPolcarSettings: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PolcarSettingDto"][];
        };
      };
    };
  };
  CreatePolcarSetting: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreatePolcarSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  GetPolcarSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["PolcarSettingDto"];
        };
      };
    };
  };
  UpdatePolcarSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdatePolcarSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeletePolcarSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  GetUserSettings: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserSettingDto"][];
        };
      };
    };
  };
  CreateUserSetting: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateUserSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  GetUserSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UserSettingDto"];
        };
      };
    };
  };
  UpdateUserSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdateUserSettingCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeleteUserSetting: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
