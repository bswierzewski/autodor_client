openapi: 3.0.1
info:
  title: 'Web, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/Contractors:
    get:
      tags:
        - Contractors
      operationId: GetContractors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
  /api/Orders:
    get:
      tags:
        - Orders
      operationId: GetOrders
      parameters:
        - name: dateFrom
          in: query
          required: true
          style: form
          schema:
            type: string
            format: date-time
        - name: dateTo
          in: query
          required: true
          style: form
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
  /api/settings/ifirmaSettings:
    get:
      tags:
        - settings/ifirmaSettings
      operationId: GetIFirmaSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IFirmaSettingDto'
    post:
      tags:
        - settings/ifirmaSettings
      operationId: CreateIFirmaSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIFirmaSettingCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
  '/api/settings/ifirmaSettings/{id}':
    get:
      tags:
        - settings/ifirmaSettings
      operationId: GetIFirmaSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IFirmaSettingDto'
    put:
      tags:
        - settings/ifirmaSettings
      operationId: UpdateIFirmaSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIFirmaSettingCommand'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - settings/ifirmaSettings
      operationId: DeleteIFirmaSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/settings/mongodbSettings:
    get:
      tags:
        - settings/mongodbSettings
      operationId: GetMongoDBSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MongoDBSettingDto'
    post:
      tags:
        - settings/mongodbSettings
      operationId: CreateMongoDBSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMongoDBSettingCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
  '/api/settings/mongodbSettings/{id}':
    get:
      tags:
        - settings/mongodbSettings
      operationId: GetMongoDBSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBSettingDto'
    put:
      tags:
        - settings/mongodbSettings
      operationId: UpdateMongoDBSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMongoDBSettingCommand'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - settings/mongodbSettings
      operationId: DeleteMongoDBSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/settings/polcarSettings:
    get:
      tags:
        - settings/polcarSettings
      operationId: GetPolcarSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolcarSettingDto'
    post:
      tags:
        - settings/polcarSettings
      operationId: CreatePolcarSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolcarSettingCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
  '/api/settings/polcarSettings/{id}':
    get:
      tags:
        - settings/polcarSettings
      operationId: GetPolcarSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolcarSettingDto'
    put:
      tags:
        - settings/polcarSettings
      operationId: UpdatePolcarSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolcarSettingCommand'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - settings/polcarSettings
      operationId: DeletePolcarSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/settings/userSettings:
    get:
      tags:
        - settings/userSettings
      operationId: GetUserSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSettingDto'
    post:
      tags:
        - settings/userSettings
      operationId: CreateUserSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserSettingCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
  '/api/settings/userSettings/{id}':
    get:
      tags:
        - settings/userSettings
      operationId: GetUserSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingDto'
    put:
      tags:
        - settings/userSettings
      operationId: UpdateUserSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserSettingCommand'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - settings/userSettings
      operationId: DeleteUserSetting
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
components:
  schemas:
    Contractor:
      type: object
      properties:
        id:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        nip:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    CreateIFirmaSettingCommand:
      required:
        - fakturaKey
        - user
      type: object
      properties:
        user:
          minLength: 1
          type: string
        fakturaKey:
          minLength: 1
          type: string
      additionalProperties: false
    CreateMongoDBSettingCommand:
      required:
        - collectionName
      type: object
      properties:
        collectionName:
          minLength: 1
          type: string
      additionalProperties: false
    CreatePolcarSettingCommand:
      required:
        - branchId
        - distributorCode
        - languageId
        - login
        - password
      type: object
      properties:
        login:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        distributorCode:
          minLength: 1
          type: string
        branchId:
          type: integer
          format: int32
        languageId:
          type: integer
          format: int32
      additionalProperties: false
    CreateUserSettingCommand:
      required:
        - auth0Id
        - iFirmaSettingId
        - mongoDBSettingId
        - polcarSettingId
      type: object
      properties:
        auth0Id:
          minLength: 1
          type: string
        iFirmaSettingId:
          type: integer
          format: int32
        polcarSettingId:
          type: integer
          format: int32
        mongoDBSettingId:
          type: integer
          format: int32
      additionalProperties: false
    IFirmaSettingDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
          nullable: true
        fakturaApiKey:
          type: string
          nullable: true
      additionalProperties: false
    MongoDBSettingDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        collectionName:
          type: string
          nullable: true
      additionalProperties: false
    OrderDto:
      type: object
      properties:
        isSelected:
          type: boolean
        date:
          type: string
          format: date-time
        id:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        person:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          nullable: true
        itemsCount:
          type: integer
          format: int32
          readOnly: true
        totalPrice:
          type: number
          format: double
          readOnly: true
      additionalProperties: false
    OrderItem:
      type: object
      properties:
        partNumber:
          type: string
          nullable: true
        partName:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double
      additionalProperties: false
    PolcarSettingDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        distributorCode:
          type: string
          nullable: true
        branchId:
          type: integer
          format: int32
        languageId:
          type: integer
          format: int32
      additionalProperties: false
    UpdateIFirmaSettingCommand:
      required:
        - fakturaKey
        - id
        - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          minLength: 1
          type: string
        fakturaKey:
          minLength: 1
          type: string
      additionalProperties: false
    UpdateMongoDBSettingCommand:
      required:
        - collectionName
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        collectionName:
          minLength: 1
          type: string
      additionalProperties: false
    UpdatePolcarSettingCommand:
      required:
        - branchId
        - distributorCode
        - id
        - languageId
        - login
        - password
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        distributorCode:
          minLength: 1
          type: string
        branchId:
          type: integer
          format: int32
        languageId:
          type: integer
          format: int32
      additionalProperties: false
    UpdateUserSettingCommand:
      required:
        - iFirmaSettingId
        - id
        - mongoDBSettingId
        - polcarSettingId
      type: object
      properties:
        id:
          type: integer
          format: int32
        iFirmaSettingId:
          type: integer
          format: int32
        polcarSettingId:
          type: integer
          format: int32
        mongoDBSettingId:
          type: integer
          format: int32
      additionalProperties: false
    UserSettingDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        auth0Id:
          type: string
          nullable: true
        iFirmaSettingId:
          type: integer
          format: int32
        iFirmaEmail:
          type: string
          nullable: true
        mongoDBSettingId:
          type: integer
          format: int32
        mongoDBCollection:
          type: string
          nullable: true
        polcarSettingId:
          type: integer
          format: int32
        polcarDistributorCode:
          type: string
          nullable: true
      additionalProperties: false